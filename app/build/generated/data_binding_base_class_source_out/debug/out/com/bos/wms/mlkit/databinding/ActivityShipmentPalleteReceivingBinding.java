// Generated by view binder compiler. Do not edit!
package com.bos.wms.mlkit.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.bos.wms.mlkit.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityShipmentPalleteReceivingBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnCapture;

  @NonNull
  public final Button btnShipPallReciDone;

  @NonNull
  public final TextView headerTxt;

  @NonNull
  public final TextView lblStatus;

  @NonNull
  public final ImageView mImageView;

  private ActivityShipmentPalleteReceivingBinding(@NonNull LinearLayout rootView,
      @NonNull Button btnCapture, @NonNull Button btnShipPallReciDone, @NonNull TextView headerTxt,
      @NonNull TextView lblStatus, @NonNull ImageView mImageView) {
    this.rootView = rootView;
    this.btnCapture = btnCapture;
    this.btnShipPallReciDone = btnShipPallReciDone;
    this.headerTxt = headerTxt;
    this.lblStatus = lblStatus;
    this.mImageView = mImageView;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityShipmentPalleteReceivingBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityShipmentPalleteReceivingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_shipment_pallete_receiving, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityShipmentPalleteReceivingBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnCapture;
      Button btnCapture = rootView.findViewById(id);
      if (btnCapture == null) {
        break missingId;
      }

      id = R.id.btnShipPallReciDone;
      Button btnShipPallReciDone = rootView.findViewById(id);
      if (btnShipPallReciDone == null) {
        break missingId;
      }

      id = R.id.headerTxt;
      TextView headerTxt = rootView.findViewById(id);
      if (headerTxt == null) {
        break missingId;
      }

      id = R.id.lblStatus;
      TextView lblStatus = rootView.findViewById(id);
      if (lblStatus == null) {
        break missingId;
      }

      id = R.id.mImageView;
      ImageView mImageView = rootView.findViewById(id);
      if (mImageView == null) {
        break missingId;
      }

      return new ActivityShipmentPalleteReceivingBinding((LinearLayout) rootView, btnCapture,
          btnShipPallReciDone, headerTxt, lblStatus, mImageView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
