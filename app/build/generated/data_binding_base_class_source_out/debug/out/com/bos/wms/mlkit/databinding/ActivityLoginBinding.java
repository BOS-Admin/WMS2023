// Generated by view binder compiler. Do not edit!
package com.bos.wms.mlkit.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bos.wms.mlkit.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityLoginBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnLogin;

  @NonNull
  public final ImageView btnSettings;

  @NonNull
  public final ConstraintLayout container;

  @NonNull
  public final Spinner ddlFloor;

  @NonNull
  public final ProgressBar loading;

  @NonNull
  public final TextView txtAppVersion;

  @NonNull
  public final EditText txtpassword;

  @NonNull
  public final EditText txtusername;

  private ActivityLoginBinding(@NonNull ConstraintLayout rootView, @NonNull Button btnLogin,
      @NonNull ImageView btnSettings, @NonNull ConstraintLayout container,
      @NonNull Spinner ddlFloor, @NonNull ProgressBar loading, @NonNull TextView txtAppVersion,
      @NonNull EditText txtpassword, @NonNull EditText txtusername) {
    this.rootView = rootView;
    this.btnLogin = btnLogin;
    this.btnSettings = btnSettings;
    this.container = container;
    this.ddlFloor = ddlFloor;
    this.loading = loading;
    this.txtAppVersion = txtAppVersion;
    this.txtpassword = txtpassword;
    this.txtusername = txtusername;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityLoginBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityLoginBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_login, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityLoginBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnLogin;
      Button btnLogin = ViewBindings.findChildViewById(rootView, id);
      if (btnLogin == null) {
        break missingId;
      }

      id = R.id.btnSettings;
      ImageView btnSettings = ViewBindings.findChildViewById(rootView, id);
      if (btnSettings == null) {
        break missingId;
      }

      ConstraintLayout container = (ConstraintLayout) rootView;

      id = R.id.ddlFloor;
      Spinner ddlFloor = ViewBindings.findChildViewById(rootView, id);
      if (ddlFloor == null) {
        break missingId;
      }

      id = R.id.loading;
      ProgressBar loading = ViewBindings.findChildViewById(rootView, id);
      if (loading == null) {
        break missingId;
      }

      id = R.id.txtAppVersion;
      TextView txtAppVersion = ViewBindings.findChildViewById(rootView, id);
      if (txtAppVersion == null) {
        break missingId;
      }

      id = R.id.txtpassword;
      EditText txtpassword = ViewBindings.findChildViewById(rootView, id);
      if (txtpassword == null) {
        break missingId;
      }

      id = R.id.txtusername;
      EditText txtusername = ViewBindings.findChildViewById(rootView, id);
      if (txtusername == null) {
        break missingId;
      }

      return new ActivityLoginBinding((ConstraintLayout) rootView, btnLogin, btnSettings, container,
          ddlFloor, loading, txtAppVersion, txtpassword, txtusername);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
