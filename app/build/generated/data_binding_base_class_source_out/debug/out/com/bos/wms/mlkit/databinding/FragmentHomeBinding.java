// Generated by view binder compiler. Do not edit!
package com.bos.wms.mlkit.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Space;
import android.widget.TableLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.bos.wms.mlkit.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentHomeBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnFoldingScan;

  @NonNull
  public final Button btnLocationCheck;

  @NonNull
  public final Button btnMenuFillPallete;

  @NonNull
  public final Button btnMenuItemPricing;

  @NonNull
  public final Button btnMenuNextReceivingStatus;

  @NonNull
  public final Button btnMenuPicking;

  @NonNull
  public final Button btnMenuPutAwayPallete;

  @NonNull
  public final Button btnMenuShipmentCartonReceiving;

  @NonNull
  public final Button btnMenuShipmentPalleteReceiving;

  @NonNull
  public final Button btnMenuShipmentReceivingPalleteCount;

  @NonNull
  public final Button btnSerialMissing;

  @NonNull
  public final Space space;

  @NonNull
  public final TableLayout tblMainMenu;

  @NonNull
  public final EditText txtStatus;

  private FragmentHomeBinding(@NonNull ConstraintLayout rootView, @NonNull Button btnFoldingScan,
      @NonNull Button btnLocationCheck, @NonNull Button btnMenuFillPallete,
      @NonNull Button btnMenuItemPricing, @NonNull Button btnMenuNextReceivingStatus,
      @NonNull Button btnMenuPicking, @NonNull Button btnMenuPutAwayPallete,
      @NonNull Button btnMenuShipmentCartonReceiving,
      @NonNull Button btnMenuShipmentPalleteReceiving,
      @NonNull Button btnMenuShipmentReceivingPalleteCount, @NonNull Button btnSerialMissing,
      @NonNull Space space, @NonNull TableLayout tblMainMenu, @NonNull EditText txtStatus) {
    this.rootView = rootView;
    this.btnFoldingScan = btnFoldingScan;
    this.btnLocationCheck = btnLocationCheck;
    this.btnMenuFillPallete = btnMenuFillPallete;
    this.btnMenuItemPricing = btnMenuItemPricing;
    this.btnMenuNextReceivingStatus = btnMenuNextReceivingStatus;
    this.btnMenuPicking = btnMenuPicking;
    this.btnMenuPutAwayPallete = btnMenuPutAwayPallete;
    this.btnMenuShipmentCartonReceiving = btnMenuShipmentCartonReceiving;
    this.btnMenuShipmentPalleteReceiving = btnMenuShipmentPalleteReceiving;
    this.btnMenuShipmentReceivingPalleteCount = btnMenuShipmentReceivingPalleteCount;
    this.btnSerialMissing = btnSerialMissing;
    this.space = space;
    this.tblMainMenu = tblMainMenu;
    this.txtStatus = txtStatus;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_home, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentHomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnFoldingScan;
      Button btnFoldingScan = rootView.findViewById(id);
      if (btnFoldingScan == null) {
        break missingId;
      }

      id = R.id.btnLocationCheck;
      Button btnLocationCheck = rootView.findViewById(id);
      if (btnLocationCheck == null) {
        break missingId;
      }

      id = R.id.btnMenuFillPallete;
      Button btnMenuFillPallete = rootView.findViewById(id);
      if (btnMenuFillPallete == null) {
        break missingId;
      }

      id = R.id.btnMenuItemPricing;
      Button btnMenuItemPricing = rootView.findViewById(id);
      if (btnMenuItemPricing == null) {
        break missingId;
      }

      id = R.id.btnMenuNextReceivingStatus;
      Button btnMenuNextReceivingStatus = rootView.findViewById(id);
      if (btnMenuNextReceivingStatus == null) {
        break missingId;
      }

      id = R.id.btnMenuPicking;
      Button btnMenuPicking = rootView.findViewById(id);
      if (btnMenuPicking == null) {
        break missingId;
      }

      id = R.id.btnMenuPutAwayPallete;
      Button btnMenuPutAwayPallete = rootView.findViewById(id);
      if (btnMenuPutAwayPallete == null) {
        break missingId;
      }

      id = R.id.btnMenuShipmentCartonReceiving;
      Button btnMenuShipmentCartonReceiving = rootView.findViewById(id);
      if (btnMenuShipmentCartonReceiving == null) {
        break missingId;
      }

      id = R.id.btnMenuShipmentPalleteReceiving;
      Button btnMenuShipmentPalleteReceiving = rootView.findViewById(id);
      if (btnMenuShipmentPalleteReceiving == null) {
        break missingId;
      }

      id = R.id.btnMenuShipmentReceivingPalleteCount;
      Button btnMenuShipmentReceivingPalleteCount = rootView.findViewById(id);
      if (btnMenuShipmentReceivingPalleteCount == null) {
        break missingId;
      }

      id = R.id.btnSerialMissing;
      Button btnSerialMissing = rootView.findViewById(id);
      if (btnSerialMissing == null) {
        break missingId;
      }

      id = R.id.space;
      Space space = rootView.findViewById(id);
      if (space == null) {
        break missingId;
      }

      id = R.id.tblMainMenu;
      TableLayout tblMainMenu = rootView.findViewById(id);
      if (tblMainMenu == null) {
        break missingId;
      }

      id = R.id.txtStatus;
      EditText txtStatus = rootView.findViewById(id);
      if (txtStatus == null) {
        break missingId;
      }

      return new FragmentHomeBinding((ConstraintLayout) rootView, btnFoldingScan, btnLocationCheck,
          btnMenuFillPallete, btnMenuItemPricing, btnMenuNextReceivingStatus, btnMenuPicking,
          btnMenuPutAwayPallete, btnMenuShipmentCartonReceiving, btnMenuShipmentPalleteReceiving,
          btnMenuShipmentReceivingPalleteCount, btnSerialMissing, space, tblMainMenu, txtStatus);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
