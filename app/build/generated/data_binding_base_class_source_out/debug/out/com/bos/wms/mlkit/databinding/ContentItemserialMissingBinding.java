// Generated by view binder compiler. Do not edit!
package com.bos.wms.mlkit.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bos.wms.mlkit.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ContentItemserialMissingBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final RadioButton btnA;

  @NonNull
  public final RadioButton btnB;

  @NonNull
  public final RadioButton btnC;

  @NonNull
  public final RadioButton btnD;

  @NonNull
  public final RadioButton btnE;

  @NonNull
  public final RadioButton btnF;

  @NonNull
  public final RadioGroup btnMissingLetter1;

  @NonNull
  public final RadioGroup btnMissingLetter2;

  @NonNull
  public final Button btnSubmit;

  @NonNull
  public final TextView lblError;

  @NonNull
  public final TextView lblItemsCnt;

  @NonNull
  public final TextView lblfillpalleteBarcode;

  @NonNull
  public final TextView lblfillpalleteListView;

  @NonNull
  public final LinearLayout linearLayout1;

  @NonNull
  public final LinearLayout linearLayout2;

  @NonNull
  public final LinearLayout linearLayout3;

  @NonNull
  public final LinearLayout linearLayout4;

  @NonNull
  public final LinearLayout linearLayout5;

  @NonNull
  public final LinearLayout linearLayout6;

  @NonNull
  public final RecyclerView recyclerView;

  @NonNull
  public final EditText txtItemCode;

  private ContentItemserialMissingBinding(@NonNull ConstraintLayout rootView,
      @NonNull RadioButton btnA, @NonNull RadioButton btnB, @NonNull RadioButton btnC,
      @NonNull RadioButton btnD, @NonNull RadioButton btnE, @NonNull RadioButton btnF,
      @NonNull RadioGroup btnMissingLetter1, @NonNull RadioGroup btnMissingLetter2,
      @NonNull Button btnSubmit, @NonNull TextView lblError, @NonNull TextView lblItemsCnt,
      @NonNull TextView lblfillpalleteBarcode, @NonNull TextView lblfillpalleteListView,
      @NonNull LinearLayout linearLayout1, @NonNull LinearLayout linearLayout2,
      @NonNull LinearLayout linearLayout3, @NonNull LinearLayout linearLayout4,
      @NonNull LinearLayout linearLayout5, @NonNull LinearLayout linearLayout6,
      @NonNull RecyclerView recyclerView, @NonNull EditText txtItemCode) {
    this.rootView = rootView;
    this.btnA = btnA;
    this.btnB = btnB;
    this.btnC = btnC;
    this.btnD = btnD;
    this.btnE = btnE;
    this.btnF = btnF;
    this.btnMissingLetter1 = btnMissingLetter1;
    this.btnMissingLetter2 = btnMissingLetter2;
    this.btnSubmit = btnSubmit;
    this.lblError = lblError;
    this.lblItemsCnt = lblItemsCnt;
    this.lblfillpalleteBarcode = lblfillpalleteBarcode;
    this.lblfillpalleteListView = lblfillpalleteListView;
    this.linearLayout1 = linearLayout1;
    this.linearLayout2 = linearLayout2;
    this.linearLayout3 = linearLayout3;
    this.linearLayout4 = linearLayout4;
    this.linearLayout5 = linearLayout5;
    this.linearLayout6 = linearLayout6;
    this.recyclerView = recyclerView;
    this.txtItemCode = txtItemCode;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ContentItemserialMissingBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ContentItemserialMissingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.content_itemserial_missing, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ContentItemserialMissingBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnA;
      RadioButton btnA = ViewBindings.findChildViewById(rootView, id);
      if (btnA == null) {
        break missingId;
      }

      id = R.id.btnB;
      RadioButton btnB = ViewBindings.findChildViewById(rootView, id);
      if (btnB == null) {
        break missingId;
      }

      id = R.id.btnC;
      RadioButton btnC = ViewBindings.findChildViewById(rootView, id);
      if (btnC == null) {
        break missingId;
      }

      id = R.id.btnD;
      RadioButton btnD = ViewBindings.findChildViewById(rootView, id);
      if (btnD == null) {
        break missingId;
      }

      id = R.id.btnE;
      RadioButton btnE = ViewBindings.findChildViewById(rootView, id);
      if (btnE == null) {
        break missingId;
      }

      id = R.id.btnF;
      RadioButton btnF = ViewBindings.findChildViewById(rootView, id);
      if (btnF == null) {
        break missingId;
      }

      id = R.id.btnMissingLetter1;
      RadioGroup btnMissingLetter1 = ViewBindings.findChildViewById(rootView, id);
      if (btnMissingLetter1 == null) {
        break missingId;
      }

      id = R.id.btnMissingLetter2;
      RadioGroup btnMissingLetter2 = ViewBindings.findChildViewById(rootView, id);
      if (btnMissingLetter2 == null) {
        break missingId;
      }

      id = R.id.btnSubmit;
      Button btnSubmit = ViewBindings.findChildViewById(rootView, id);
      if (btnSubmit == null) {
        break missingId;
      }

      id = R.id.lblError;
      TextView lblError = ViewBindings.findChildViewById(rootView, id);
      if (lblError == null) {
        break missingId;
      }

      id = R.id.lblItemsCnt;
      TextView lblItemsCnt = ViewBindings.findChildViewById(rootView, id);
      if (lblItemsCnt == null) {
        break missingId;
      }

      id = R.id.lblfillpalleteBarcode;
      TextView lblfillpalleteBarcode = ViewBindings.findChildViewById(rootView, id);
      if (lblfillpalleteBarcode == null) {
        break missingId;
      }

      id = R.id.lblfillpalleteListView;
      TextView lblfillpalleteListView = ViewBindings.findChildViewById(rootView, id);
      if (lblfillpalleteListView == null) {
        break missingId;
      }

      id = R.id.linearLayout1;
      LinearLayout linearLayout1 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout1 == null) {
        break missingId;
      }

      id = R.id.linearLayout2;
      LinearLayout linearLayout2 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout2 == null) {
        break missingId;
      }

      id = R.id.linearLayout3;
      LinearLayout linearLayout3 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout3 == null) {
        break missingId;
      }

      id = R.id.linearLayout4;
      LinearLayout linearLayout4 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout4 == null) {
        break missingId;
      }

      id = R.id.linearLayout5;
      LinearLayout linearLayout5 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout5 == null) {
        break missingId;
      }

      id = R.id.linearLayout6;
      LinearLayout linearLayout6 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout6 == null) {
        break missingId;
      }

      id = R.id.recyclerView;
      RecyclerView recyclerView = ViewBindings.findChildViewById(rootView, id);
      if (recyclerView == null) {
        break missingId;
      }

      id = R.id.txtItemCode;
      EditText txtItemCode = ViewBindings.findChildViewById(rootView, id);
      if (txtItemCode == null) {
        break missingId;
      }

      return new ContentItemserialMissingBinding((ConstraintLayout) rootView, btnA, btnB, btnC,
          btnD, btnE, btnF, btnMissingLetter1, btnMissingLetter2, btnSubmit, lblError, lblItemsCnt,
          lblfillpalleteBarcode, lblfillpalleteListView, linearLayout1, linearLayout2,
          linearLayout3, linearLayout4, linearLayout5, linearLayout6, recyclerView, txtItemCode);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
