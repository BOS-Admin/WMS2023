// Generated by view binder compiler. Do not edit!
package com.bos.wms.mlkit.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import com.bos.wms.mlkit.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ContentLocationcheckBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnlocationcheckDone;

  @NonNull
  public final TextView lblError;

  @NonNull
  public final TextView lblLocationCheckRemainingBins;

  @NonNull
  public final TextView lblLocationCheckRemainingShelfs;

  @NonNull
  public final TextView lbllocationcheckBinBarcode;

  @NonNull
  public final TextView lbllocationcheckListView;

  @NonNull
  public final TextView lbllocationcheckRack;

  @NonNull
  public final TextView lbllocationcheckShelfBarcode;

  @NonNull
  public final LinearLayout linearLayout;

  @NonNull
  public final RecyclerView recyclerView;

  @NonNull
  public final TextView textView;

  @NonNull
  public final EditText txtShelfBarcode;

  @NonNull
  public final EditText txtlocationcheckBinBarcode;

  private ContentLocationcheckBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button btnlocationcheckDone, @NonNull TextView lblError,
      @NonNull TextView lblLocationCheckRemainingBins,
      @NonNull TextView lblLocationCheckRemainingShelfs,
      @NonNull TextView lbllocationcheckBinBarcode, @NonNull TextView lbllocationcheckListView,
      @NonNull TextView lbllocationcheckRack, @NonNull TextView lbllocationcheckShelfBarcode,
      @NonNull LinearLayout linearLayout, @NonNull RecyclerView recyclerView,
      @NonNull TextView textView, @NonNull EditText txtShelfBarcode,
      @NonNull EditText txtlocationcheckBinBarcode) {
    this.rootView = rootView;
    this.btnlocationcheckDone = btnlocationcheckDone;
    this.lblError = lblError;
    this.lblLocationCheckRemainingBins = lblLocationCheckRemainingBins;
    this.lblLocationCheckRemainingShelfs = lblLocationCheckRemainingShelfs;
    this.lbllocationcheckBinBarcode = lbllocationcheckBinBarcode;
    this.lbllocationcheckListView = lbllocationcheckListView;
    this.lbllocationcheckRack = lbllocationcheckRack;
    this.lbllocationcheckShelfBarcode = lbllocationcheckShelfBarcode;
    this.linearLayout = linearLayout;
    this.recyclerView = recyclerView;
    this.textView = textView;
    this.txtShelfBarcode = txtShelfBarcode;
    this.txtlocationcheckBinBarcode = txtlocationcheckBinBarcode;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ContentLocationcheckBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ContentLocationcheckBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.content_locationcheck, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ContentLocationcheckBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnlocationcheckDone;
      Button btnlocationcheckDone = rootView.findViewById(id);
      if (btnlocationcheckDone == null) {
        break missingId;
      }

      id = R.id.lblError;
      TextView lblError = rootView.findViewById(id);
      if (lblError == null) {
        break missingId;
      }

      id = R.id.lblLocationCheckRemainingBins;
      TextView lblLocationCheckRemainingBins = rootView.findViewById(id);
      if (lblLocationCheckRemainingBins == null) {
        break missingId;
      }

      id = R.id.lblLocationCheckRemainingShelfs;
      TextView lblLocationCheckRemainingShelfs = rootView.findViewById(id);
      if (lblLocationCheckRemainingShelfs == null) {
        break missingId;
      }

      id = R.id.lbllocationcheckBinBarcode;
      TextView lbllocationcheckBinBarcode = rootView.findViewById(id);
      if (lbllocationcheckBinBarcode == null) {
        break missingId;
      }

      id = R.id.lbllocationcheckListView;
      TextView lbllocationcheckListView = rootView.findViewById(id);
      if (lbllocationcheckListView == null) {
        break missingId;
      }

      id = R.id.lbllocationcheckRack;
      TextView lbllocationcheckRack = rootView.findViewById(id);
      if (lbllocationcheckRack == null) {
        break missingId;
      }

      id = R.id.lbllocationcheckShelfBarcode;
      TextView lbllocationcheckShelfBarcode = rootView.findViewById(id);
      if (lbllocationcheckShelfBarcode == null) {
        break missingId;
      }

      id = R.id.linearLayout;
      LinearLayout linearLayout = rootView.findViewById(id);
      if (linearLayout == null) {
        break missingId;
      }

      id = R.id.recyclerView;
      RecyclerView recyclerView = rootView.findViewById(id);
      if (recyclerView == null) {
        break missingId;
      }

      id = R.id.textView;
      TextView textView = rootView.findViewById(id);
      if (textView == null) {
        break missingId;
      }

      id = R.id.txtShelfBarcode;
      EditText txtShelfBarcode = rootView.findViewById(id);
      if (txtShelfBarcode == null) {
        break missingId;
      }

      id = R.id.txtlocationcheckBinBarcode;
      EditText txtlocationcheckBinBarcode = rootView.findViewById(id);
      if (txtlocationcheckBinBarcode == null) {
        break missingId;
      }

      return new ContentLocationcheckBinding((ConstraintLayout) rootView, btnlocationcheckDone,
          lblError, lblLocationCheckRemainingBins, lblLocationCheckRemainingShelfs,
          lbllocationcheckBinBarcode, lbllocationcheckListView, lbllocationcheckRack,
          lbllocationcheckShelfBarcode, linearLayout, recyclerView, textView, txtShelfBarcode,
          txtlocationcheckBinBarcode);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
