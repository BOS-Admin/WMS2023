// Generated by view binder compiler. Do not edit!
package com.bos.wms.mlkit.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bos.wms.mlkit.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityPackingDcBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout activityScanRfid;

  @NonNull
  public final Button btnDelete;

  @NonNull
  public final Button btnDone;

  @NonNull
  public final Button btnNext;

  @NonNull
  public final Button btnPrev;

  @NonNull
  public final TextView textBox;

  @NonNull
  public final EditText textBranch;

  @NonNull
  public final EditText textItemScanned;

  @NonNull
  public final EditText textUser;

  @NonNull
  public final EditText textView12;

  private ActivityPackingDcBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout activityScanRfid, @NonNull Button btnDelete,
      @NonNull Button btnDone, @NonNull Button btnNext, @NonNull Button btnPrev,
      @NonNull TextView textBox, @NonNull EditText textBranch, @NonNull EditText textItemScanned,
      @NonNull EditText textUser, @NonNull EditText textView12) {
    this.rootView = rootView;
    this.activityScanRfid = activityScanRfid;
    this.btnDelete = btnDelete;
    this.btnDone = btnDone;
    this.btnNext = btnNext;
    this.btnPrev = btnPrev;
    this.textBox = textBox;
    this.textBranch = textBranch;
    this.textItemScanned = textItemScanned;
    this.textUser = textUser;
    this.textView12 = textView12;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityPackingDcBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityPackingDcBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_packing_dc, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityPackingDcBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      ConstraintLayout activityScanRfid = (ConstraintLayout) rootView;

      id = R.id.btnDelete;
      Button btnDelete = ViewBindings.findChildViewById(rootView, id);
      if (btnDelete == null) {
        break missingId;
      }

      id = R.id.btnDone;
      Button btnDone = ViewBindings.findChildViewById(rootView, id);
      if (btnDone == null) {
        break missingId;
      }

      id = R.id.btnNext;
      Button btnNext = ViewBindings.findChildViewById(rootView, id);
      if (btnNext == null) {
        break missingId;
      }

      id = R.id.btnPrev;
      Button btnPrev = ViewBindings.findChildViewById(rootView, id);
      if (btnPrev == null) {
        break missingId;
      }

      id = R.id.textBox;
      TextView textBox = ViewBindings.findChildViewById(rootView, id);
      if (textBox == null) {
        break missingId;
      }

      id = R.id.textBranch;
      EditText textBranch = ViewBindings.findChildViewById(rootView, id);
      if (textBranch == null) {
        break missingId;
      }

      id = R.id.textItemScanned;
      EditText textItemScanned = ViewBindings.findChildViewById(rootView, id);
      if (textItemScanned == null) {
        break missingId;
      }

      id = R.id.textUser;
      EditText textUser = ViewBindings.findChildViewById(rootView, id);
      if (textUser == null) {
        break missingId;
      }

      id = R.id.textView12;
      EditText textView12 = ViewBindings.findChildViewById(rootView, id);
      if (textView12 == null) {
        break missingId;
      }

      return new ActivityPackingDcBinding((ConstraintLayout) rootView, activityScanRfid, btnDelete,
          btnDone, btnNext, btnPrev, textBox, textBranch, textItemScanned, textUser, textView12);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
