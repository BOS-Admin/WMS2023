// Generated by view binder compiler. Do not edit!
package com.bos.wms.mlkit.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bos.wms.mlkit.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class PopWindowMainBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnSave;

  @NonNull
  public final LinearLayout popMainFilter;

  @NonNull
  public final EditText txtIPAddress;

  @NonNull
  public final EditText txtIPAddress2;

  @NonNull
  public final EditText txtPricingLineCode;

  @NonNull
  public final EditText txtRFIDMac;

  @NonNull
  public final EditText txtScaleMac;

  private PopWindowMainBinding(@NonNull LinearLayout rootView, @NonNull Button btnSave,
      @NonNull LinearLayout popMainFilter, @NonNull EditText txtIPAddress,
      @NonNull EditText txtIPAddress2, @NonNull EditText txtPricingLineCode,
      @NonNull EditText txtRFIDMac, @NonNull EditText txtScaleMac) {
    this.rootView = rootView;
    this.btnSave = btnSave;
    this.popMainFilter = popMainFilter;
    this.txtIPAddress = txtIPAddress;
    this.txtIPAddress2 = txtIPAddress2;
    this.txtPricingLineCode = txtPricingLineCode;
    this.txtRFIDMac = txtRFIDMac;
    this.txtScaleMac = txtScaleMac;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static PopWindowMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static PopWindowMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.pop_window_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static PopWindowMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnSave;
      Button btnSave = ViewBindings.findChildViewById(rootView, id);
      if (btnSave == null) {
        break missingId;
      }

      id = R.id.pop_main_filter;
      LinearLayout popMainFilter = ViewBindings.findChildViewById(rootView, id);
      if (popMainFilter == null) {
        break missingId;
      }

      id = R.id.txtIPAddress;
      EditText txtIPAddress = ViewBindings.findChildViewById(rootView, id);
      if (txtIPAddress == null) {
        break missingId;
      }

      id = R.id.txtIPAddress2;
      EditText txtIPAddress2 = ViewBindings.findChildViewById(rootView, id);
      if (txtIPAddress2 == null) {
        break missingId;
      }

      id = R.id.txtPricingLineCode;
      EditText txtPricingLineCode = ViewBindings.findChildViewById(rootView, id);
      if (txtPricingLineCode == null) {
        break missingId;
      }

      id = R.id.txtRFIDMac;
      EditText txtRFIDMac = ViewBindings.findChildViewById(rootView, id);
      if (txtRFIDMac == null) {
        break missingId;
      }

      id = R.id.txtScaleMac;
      EditText txtScaleMac = ViewBindings.findChildViewById(rootView, id);
      if (txtScaleMac == null) {
        break missingId;
      }

      return new PopWindowMainBinding((LinearLayout) rootView, btnSave, popMainFilter, txtIPAddress,
          txtIPAddress2, txtPricingLineCode, txtRFIDMac, txtScaleMac);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
