// Generated by view binder compiler. Do not edit!
package com.bos.wms.mlkit.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bos.wms.mlkit.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentDashboardBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnCount;

  @NonNull
  public final Button btnStandSwitch;

  @NonNull
  public final Button btnStockTake;

  @NonNull
  public final Button btnTransfer;

  @NonNull
  public final LinearLayout layoutDashboard;

  @NonNull
  public final EditText textBranch;

  @NonNull
  public final EditText textUser;

  private FragmentDashboardBinding(@NonNull ConstraintLayout rootView, @NonNull Button btnCount,
      @NonNull Button btnStandSwitch, @NonNull Button btnStockTake, @NonNull Button btnTransfer,
      @NonNull LinearLayout layoutDashboard, @NonNull EditText textBranch,
      @NonNull EditText textUser) {
    this.rootView = rootView;
    this.btnCount = btnCount;
    this.btnStandSwitch = btnStandSwitch;
    this.btnStockTake = btnStockTake;
    this.btnTransfer = btnTransfer;
    this.layoutDashboard = layoutDashboard;
    this.textBranch = textBranch;
    this.textUser = textUser;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentDashboardBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentDashboardBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_dashboard, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentDashboardBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnCount;
      Button btnCount = ViewBindings.findChildViewById(rootView, id);
      if (btnCount == null) {
        break missingId;
      }

      id = R.id.btnStandSwitch;
      Button btnStandSwitch = ViewBindings.findChildViewById(rootView, id);
      if (btnStandSwitch == null) {
        break missingId;
      }

      id = R.id.btnStockTake;
      Button btnStockTake = ViewBindings.findChildViewById(rootView, id);
      if (btnStockTake == null) {
        break missingId;
      }

      id = R.id.btnTransfer;
      Button btnTransfer = ViewBindings.findChildViewById(rootView, id);
      if (btnTransfer == null) {
        break missingId;
      }

      id = R.id.layoutDashboard;
      LinearLayout layoutDashboard = ViewBindings.findChildViewById(rootView, id);
      if (layoutDashboard == null) {
        break missingId;
      }

      id = R.id.textBranch;
      EditText textBranch = ViewBindings.findChildViewById(rootView, id);
      if (textBranch == null) {
        break missingId;
      }

      id = R.id.textUser;
      EditText textUser = ViewBindings.findChildViewById(rootView, id);
      if (textUser == null) {
        break missingId;
      }

      return new FragmentDashboardBinding((ConstraintLayout) rootView, btnCount, btnStandSwitch,
          btnStockTake, btnTransfer, layoutDashboard, textBranch, textUser);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
